name:  FastAPI App CI/CD Pipeline
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
on: 
  push:
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"      
      - name: Ruff Linter Test
        uses: chartboost/ruff-action@v1
        with:
          src: ./src
          version: 0.1.6
  check-app:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt     
      - name: Run app tests
        run: |
          pytest ./tests/unit/test.py
  release:
    runs-on: ubuntu-latest
    needs: [lint, check-app]    
    steps:          
      - uses: actions/checkout@v4    
      - name: Set AWS credentials
        uses: aws-actions/configure-aws-credentials@v4  
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1                            
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2        
      - name: Set Docker Images and Tags
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.login-ecr.outputs.registry }}/${{ vars.FASTAPI_LAMBDA_REPOSITORY_NAME }}
          flavor: latest=true
      - name: Docker build and push to ECR         
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile          
          push: true
          tags: ${{ secrets.AWS_REGISTRY_URL }}:latest
      - name: Update Docker image using Lambda
        uses: int128/deploy-lambda-action@v1
        with:
            function-name: ${{ vars.FASTAPI_LAMBDA_FUNCTION_NAME }}
            image-uri: ${{ secrets.AWS_REGISTRY_URL }}:latest
      - run: echo "üçè This job's status is ${{ job.status }}."